Terminals which are not used

   CALL


Grammar

    0 $accept: program $end

    1 program: main

    2 main: main stmt
    3     | main func_decl
    4     | /* empty */

    5 func_decl: DECL_VARIABLE '(' param_list ')' '{' stmt_list '}'

    6 stmt: ';'
    7     | expr ';'
    8     | GETI '(' variable ')' ';'
    9     | GETC '(' variable ')' ';'
   10     | GETS '(' variable ')' ';'
   11     | PUTI '(' arg ')' ';'
   12     | PUTC '(' arg ')' ';'
   13     | PUTS '(' arg ')' ';'
   14     | PUTI_ '(' arg ')' ';'
   15     | PUTC_ '(' arg ')' ';'
   16     | PUTS_ '(' arg ')' ';'
   17     | variable '=' expr ';'
   18     | array '=' expr ';'
   19     | FOR '(' stmt stmt stmt ')' stmt
   20     | WHILE '(' expr ')' stmt
   21     | IF '(' expr ')' stmt
   22     | IF '(' expr ')' stmt ELSE stmt
   23     | BREAK ';'
   24     | CONTINUE ';'
   25     | RETURN expr ';'
   26     | '{' stmt_list '}'
   27     | DECL_VARIABLE '(' param_list ')' ';'
   28     | DECL_ARRAY array ';'

   29 stmt_list: stmt
   30          | stmt_list stmt

   31 param: variable
   32      | /* empty */

   33 param_list: param
   34           | param_list ',' param

   35 arg: expr
   36    | /* empty */

   37 arg_list: arg
   38         | arg_list ',' arg

   39 variable: VARIABLE
   40         | DECL_VARIABLE

   41 array: array_list ']'

   42 array_list: variable '[' expr
   43           | array_list ']' '[' expr

   44 expr: INTEGER
   45     | CHAR
   46     | STRING
   47     | array
   48     | variable
   49     | '-' expr
   50     | expr '+' expr
   51     | expr '-' expr
   52     | expr '*' expr
   53     | expr '%' expr
   54     | expr '/' expr
   55     | expr '<' expr
   56     | expr '>' expr
   57     | expr GE expr
   58     | expr LE expr
   59     | expr NE expr
   60     | expr EQ expr
   61     | expr AND expr
   62     | expr OR expr
   63     | '(' expr ')'
   64     | VARIABLE '(' arg_list ')'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 53
'(' (40) 5 8 9 10 11 12 13 14 15 16 19 20 21 22 27 63 64
')' (41) 5 8 9 10 11 12 13 14 15 16 19 20 21 22 27 63 64
'*' (42) 52
'+' (43) 50
',' (44) 34 38
'-' (45) 49 51
'/' (47) 54
';' (59) 6 7 8 9 10 11 12 13 14 15 16 17 18 23 24 25 27 28
'<' (60) 55
'=' (61) 17 18
'>' (62) 56
'[' (91) 42 43
']' (93) 41 43
'{' (123) 5 26
'}' (125) 5 26
error (256)
INTEGER (258) 44
CHAR (259) 45
STRING (260) 46
VARIABLE (261) 39 64
DECL_VARIABLE (262) 5 27 40
FOR (263) 19
WHILE (264) 20
IF (265) 21 22
BREAK (266) 23
CONTINUE (267) 24
RETURN (268) 25
DECL_ARRAY (269) 28
GETI (270) 8
GETS (271) 10
GETC (272) 9
PUTI (273) 11
PUTS (274) 13
PUTC (275) 12
PUTI_ (276) 14
PUTS_ (277) 16
PUTC_ (278) 15
CALL (279)
IFX (280)
ELSE (281) 22
OR (282) 62
AND (283) 61
NE (284) 59
EQ (285) 60
LE (286) 58
GE (287) 57
UMINUS (288)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1, on right: 0
main (52)
    on left: 2 3 4, on right: 1 2 3
func_decl (53)
    on left: 5, on right: 3
stmt (54)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
    26 27 28, on right: 2 19 20 21 22 29 30
stmt_list (55)
    on left: 29 30, on right: 5 26 30
param (56)
    on left: 31 32, on right: 33 34
param_list (57)
    on left: 33 34, on right: 5 27 34
arg (58)
    on left: 35 36, on right: 11 12 13 14 15 16 37 38
arg_list (59)
    on left: 37 38, on right: 38 64
variable (60)
    on left: 39 40, on right: 8 9 10 17 31 42 48
array (61)
    on left: 41, on right: 18 28 47
array_list (62)
    on left: 42 43, on right: 41 43
expr (63)
    on left: 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
    62 63 64, on right: 7 17 18 20 21 22 25 35 42 43 49 50 51 52 53
    54 55 56 57 58 59 60 61 62 63


state 0

    0 $accept: . program $end

    $default  reduce using rule 4 (main)

    program  go to state 1
    main     go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: main .
    2 main: main . stmt
    3     | main . func_decl

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    RETURN         shift, and go to state 14
    DECL_ARRAY     shift, and go to state 15
    GETI           shift, and go to state 16
    GETS           shift, and go to state 17
    GETC           shift, and go to state 18
    PUTI           shift, and go to state 19
    PUTS           shift, and go to state 20
    PUTC           shift, and go to state 21
    PUTI_          shift, and go to state 22
    PUTS_          shift, and go to state 23
    PUTC_          shift, and go to state 24
    '-'            shift, and go to state 25
    '('            shift, and go to state 26
    '{'            shift, and go to state 27
    ';'            shift, and go to state 28

    $default  reduce using rule 1 (program)

    func_decl   go to state 29
    stmt        go to state 30
    variable    go to state 31
    array       go to state 32
    array_list  go to state 33
    expr        go to state 34


state 3

    0 $accept: program $end .

    $default  accept


state 4

   44 expr: INTEGER .

    $default  reduce using rule 44 (expr)


state 5

   45 expr: CHAR .

    $default  reduce using rule 45 (expr)


state 6

   46 expr: STRING .

    $default  reduce using rule 46 (expr)


state 7

   39 variable: VARIABLE .
   64 expr: VARIABLE . '(' arg_list ')'

    '('  shift, and go to state 35

    $default  reduce using rule 39 (variable)


state 8

    5 func_decl: DECL_VARIABLE . '(' param_list ')' '{' stmt_list '}'
   27 stmt: DECL_VARIABLE . '(' param_list ')' ';'
   40 variable: DECL_VARIABLE .

    '('  shift, and go to state 36

    $default  reduce using rule 40 (variable)


state 9

   19 stmt: FOR . '(' stmt stmt stmt ')' stmt

    '('  shift, and go to state 37


state 10

   20 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 38


state 11

   21 stmt: IF . '(' expr ')' stmt
   22     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 39


state 12

   23 stmt: BREAK . ';'

    ';'  shift, and go to state 40


state 13

   24 stmt: CONTINUE . ';'

    ';'  shift, and go to state 41


state 14

   25 stmt: RETURN . expr ';'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 45


state 15

   28 stmt: DECL_ARRAY . array ';'

    VARIABLE       shift, and go to state 46
    DECL_VARIABLE  shift, and go to state 42

    variable    go to state 47
    array       go to state 48
    array_list  go to state 33


state 16

    8 stmt: GETI . '(' variable ')' ';'

    '('  shift, and go to state 49


state 17

   10 stmt: GETS . '(' variable ')' ';'

    '('  shift, and go to state 50


state 18

    9 stmt: GETC . '(' variable ')' ';'

    '('  shift, and go to state 51


state 19

   11 stmt: PUTI . '(' arg ')' ';'

    '('  shift, and go to state 52


state 20

   13 stmt: PUTS . '(' arg ')' ';'

    '('  shift, and go to state 53


state 21

   12 stmt: PUTC . '(' arg ')' ';'

    '('  shift, and go to state 54


state 22

   14 stmt: PUTI_ . '(' arg ')' ';'

    '('  shift, and go to state 55


state 23

   16 stmt: PUTS_ . '(' arg ')' ';'

    '('  shift, and go to state 56


state 24

   15 stmt: PUTC_ . '(' arg ')' ';'

    '('  shift, and go to state 57


state 25

   49 expr: '-' . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 58


state 26

   63 expr: '(' . expr ')'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 59


state 27

   26 stmt: '{' . stmt_list '}'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 60
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    RETURN         shift, and go to state 14
    DECL_ARRAY     shift, and go to state 15
    GETI           shift, and go to state 16
    GETS           shift, and go to state 17
    GETC           shift, and go to state 18
    PUTI           shift, and go to state 19
    PUTS           shift, and go to state 20
    PUTC           shift, and go to state 21
    PUTI_          shift, and go to state 22
    PUTS_          shift, and go to state 23
    PUTC_          shift, and go to state 24
    '-'            shift, and go to state 25
    '('            shift, and go to state 26
    '{'            shift, and go to state 27
    ';'            shift, and go to state 28

    stmt        go to state 61
    stmt_list   go to state 62
    variable    go to state 31
    array       go to state 32
    array_list  go to state 33
    expr        go to state 34


state 28

    6 stmt: ';' .

    $default  reduce using rule 6 (stmt)


state 29

    3 main: main func_decl .

    $default  reduce using rule 3 (main)


state 30

    2 main: main stmt .

    $default  reduce using rule 2 (main)


state 31

   17 stmt: variable . '=' expr ';'
   42 array_list: variable . '[' expr
   48 expr: variable .

    '='  shift, and go to state 63
    '['  shift, and go to state 64

    $default  reduce using rule 48 (expr)


state 32

   18 stmt: array . '=' expr ';'
   47 expr: array .

    '='  shift, and go to state 65

    $default  reduce using rule 47 (expr)


state 33

   41 array: array_list . ']'
   43 array_list: array_list . ']' '[' expr

    ']'  shift, and go to state 66


state 34

    7 stmt: expr . ';'
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    OR   shift, and go to state 67
    AND  shift, and go to state 68
    '>'  shift, and go to state 69
    '<'  shift, and go to state 70
    NE   shift, and go to state 71
    EQ   shift, and go to state 72
    LE   shift, and go to state 73
    GE   shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79
    ';'  shift, and go to state 80


state 35

   64 expr: VARIABLE '(' . arg_list ')'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    $default  reduce using rule 36 (arg)

    arg         go to state 81
    arg_list    go to state 82
    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 83


state 36

    5 func_decl: DECL_VARIABLE '(' . param_list ')' '{' stmt_list '}'
   27 stmt: DECL_VARIABLE '(' . param_list ')' ';'

    VARIABLE       shift, and go to state 46
    DECL_VARIABLE  shift, and go to state 42

    $default  reduce using rule 32 (param)

    param       go to state 84
    param_list  go to state 85
    variable    go to state 86


state 37

   19 stmt: FOR '(' . stmt stmt stmt ')' stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 60
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    RETURN         shift, and go to state 14
    DECL_ARRAY     shift, and go to state 15
    GETI           shift, and go to state 16
    GETS           shift, and go to state 17
    GETC           shift, and go to state 18
    PUTI           shift, and go to state 19
    PUTS           shift, and go to state 20
    PUTC           shift, and go to state 21
    PUTI_          shift, and go to state 22
    PUTS_          shift, and go to state 23
    PUTC_          shift, and go to state 24
    '-'            shift, and go to state 25
    '('            shift, and go to state 26
    '{'            shift, and go to state 27
    ';'            shift, and go to state 28

    stmt        go to state 87
    variable    go to state 31
    array       go to state 32
    array_list  go to state 33
    expr        go to state 34


state 38

   20 stmt: WHILE '(' . expr ')' stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 88


state 39

   21 stmt: IF '(' . expr ')' stmt
   22     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 89


state 40

   23 stmt: BREAK ';' .

    $default  reduce using rule 23 (stmt)


state 41

   24 stmt: CONTINUE ';' .

    $default  reduce using rule 24 (stmt)


state 42

   40 variable: DECL_VARIABLE .

    $default  reduce using rule 40 (variable)


state 43

   42 array_list: variable . '[' expr
   48 expr: variable .

    '['  shift, and go to state 64

    $default  reduce using rule 48 (expr)


state 44

   47 expr: array .

    $default  reduce using rule 47 (expr)


state 45

   25 stmt: RETURN expr . ';'
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    OR   shift, and go to state 67
    AND  shift, and go to state 68
    '>'  shift, and go to state 69
    '<'  shift, and go to state 70
    NE   shift, and go to state 71
    EQ   shift, and go to state 72
    LE   shift, and go to state 73
    GE   shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79
    ';'  shift, and go to state 90


state 46

   39 variable: VARIABLE .

    $default  reduce using rule 39 (variable)


state 47

   42 array_list: variable . '[' expr

    '['  shift, and go to state 64


state 48

   28 stmt: DECL_ARRAY array . ';'

    ';'  shift, and go to state 91


state 49

    8 stmt: GETI '(' . variable ')' ';'

    VARIABLE       shift, and go to state 46
    DECL_VARIABLE  shift, and go to state 42

    variable  go to state 92


state 50

   10 stmt: GETS '(' . variable ')' ';'

    VARIABLE       shift, and go to state 46
    DECL_VARIABLE  shift, and go to state 42

    variable  go to state 93


state 51

    9 stmt: GETC '(' . variable ')' ';'

    VARIABLE       shift, and go to state 46
    DECL_VARIABLE  shift, and go to state 42

    variable  go to state 94


state 52

   11 stmt: PUTI '(' . arg ')' ';'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    $default  reduce using rule 36 (arg)

    arg         go to state 95
    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 83


state 53

   13 stmt: PUTS '(' . arg ')' ';'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    $default  reduce using rule 36 (arg)

    arg         go to state 96
    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 83


state 54

   12 stmt: PUTC '(' . arg ')' ';'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    $default  reduce using rule 36 (arg)

    arg         go to state 97
    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 83


state 55

   14 stmt: PUTI_ '(' . arg ')' ';'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    $default  reduce using rule 36 (arg)

    arg         go to state 98
    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 83


state 56

   16 stmt: PUTS_ '(' . arg ')' ';'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    $default  reduce using rule 36 (arg)

    arg         go to state 99
    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 83


state 57

   15 stmt: PUTC_ '(' . arg ')' ';'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    $default  reduce using rule 36 (arg)

    arg         go to state 100
    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 83


state 58

   49 expr: '-' expr .
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    $default  reduce using rule 49 (expr)


state 59

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | '(' expr . ')'

    OR   shift, and go to state 67
    AND  shift, and go to state 68
    '>'  shift, and go to state 69
    '<'  shift, and go to state 70
    NE   shift, and go to state 71
    EQ   shift, and go to state 72
    LE   shift, and go to state 73
    GE   shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79
    ')'  shift, and go to state 101


state 60

   27 stmt: DECL_VARIABLE . '(' param_list ')' ';'
   40 variable: DECL_VARIABLE .

    '('  shift, and go to state 102

    $default  reduce using rule 40 (variable)


state 61

   29 stmt_list: stmt .

    $default  reduce using rule 29 (stmt_list)


state 62

   26 stmt: '{' stmt_list . '}'
   30 stmt_list: stmt_list . stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 60
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    RETURN         shift, and go to state 14
    DECL_ARRAY     shift, and go to state 15
    GETI           shift, and go to state 16
    GETS           shift, and go to state 17
    GETC           shift, and go to state 18
    PUTI           shift, and go to state 19
    PUTS           shift, and go to state 20
    PUTC           shift, and go to state 21
    PUTI_          shift, and go to state 22
    PUTS_          shift, and go to state 23
    PUTC_          shift, and go to state 24
    '-'            shift, and go to state 25
    '('            shift, and go to state 26
    '{'            shift, and go to state 27
    '}'            shift, and go to state 103
    ';'            shift, and go to state 28

    stmt        go to state 104
    variable    go to state 31
    array       go to state 32
    array_list  go to state 33
    expr        go to state 34


state 63

   17 stmt: variable '=' . expr ';'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 105


state 64

   42 array_list: variable '[' . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 106


state 65

   18 stmt: array '=' . expr ';'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 107


state 66

   41 array: array_list ']' .
   43 array_list: array_list ']' . '[' expr

    '['  shift, and go to state 108

    $default  reduce using rule 41 (array)


state 67

   62 expr: expr OR . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 109


state 68

   61 expr: expr AND . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 110


state 69

   56 expr: expr '>' . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 111


state 70

   55 expr: expr '<' . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 112


state 71

   59 expr: expr NE . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 113


state 72

   60 expr: expr EQ . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 114


state 73

   58 expr: expr LE . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 115


state 74

   57 expr: expr GE . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 116


state 75

   50 expr: expr '+' . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 117


state 76

   51 expr: expr '-' . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 118


state 77

   52 expr: expr '*' . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 119


state 78

   54 expr: expr '/' . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 120


state 79

   53 expr: expr '%' . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 121


state 80

    7 stmt: expr ';' .

    $default  reduce using rule 7 (stmt)


state 81

   37 arg_list: arg .

    $default  reduce using rule 37 (arg_list)


state 82

   38 arg_list: arg_list . ',' arg
   64 expr: VARIABLE '(' arg_list . ')'

    ')'  shift, and go to state 122
    ','  shift, and go to state 123


state 83

   35 arg: expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    OR   shift, and go to state 67
    AND  shift, and go to state 68
    '>'  shift, and go to state 69
    '<'  shift, and go to state 70
    NE   shift, and go to state 71
    EQ   shift, and go to state 72
    LE   shift, and go to state 73
    GE   shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 35 (arg)


state 84

   33 param_list: param .

    $default  reduce using rule 33 (param_list)


state 85

    5 func_decl: DECL_VARIABLE '(' param_list . ')' '{' stmt_list '}'
   27 stmt: DECL_VARIABLE '(' param_list . ')' ';'
   34 param_list: param_list . ',' param

    ')'  shift, and go to state 124
    ','  shift, and go to state 125


state 86

   31 param: variable .

    $default  reduce using rule 31 (param)


state 87

   19 stmt: FOR '(' stmt . stmt stmt ')' stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 60
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    RETURN         shift, and go to state 14
    DECL_ARRAY     shift, and go to state 15
    GETI           shift, and go to state 16
    GETS           shift, and go to state 17
    GETC           shift, and go to state 18
    PUTI           shift, and go to state 19
    PUTS           shift, and go to state 20
    PUTC           shift, and go to state 21
    PUTI_          shift, and go to state 22
    PUTS_          shift, and go to state 23
    PUTC_          shift, and go to state 24
    '-'            shift, and go to state 25
    '('            shift, and go to state 26
    '{'            shift, and go to state 27
    ';'            shift, and go to state 28

    stmt        go to state 126
    variable    go to state 31
    array       go to state 32
    array_list  go to state 33
    expr        go to state 34


state 88

   20 stmt: WHILE '(' expr . ')' stmt
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    OR   shift, and go to state 67
    AND  shift, and go to state 68
    '>'  shift, and go to state 69
    '<'  shift, and go to state 70
    NE   shift, and go to state 71
    EQ   shift, and go to state 72
    LE   shift, and go to state 73
    GE   shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79
    ')'  shift, and go to state 127


state 89

   21 stmt: IF '(' expr . ')' stmt
   22     | IF '(' expr . ')' stmt ELSE stmt
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    OR   shift, and go to state 67
    AND  shift, and go to state 68
    '>'  shift, and go to state 69
    '<'  shift, and go to state 70
    NE   shift, and go to state 71
    EQ   shift, and go to state 72
    LE   shift, and go to state 73
    GE   shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79
    ')'  shift, and go to state 128


state 90

   25 stmt: RETURN expr ';' .

    $default  reduce using rule 25 (stmt)


state 91

   28 stmt: DECL_ARRAY array ';' .

    $default  reduce using rule 28 (stmt)


state 92

    8 stmt: GETI '(' variable . ')' ';'

    ')'  shift, and go to state 129


state 93

   10 stmt: GETS '(' variable . ')' ';'

    ')'  shift, and go to state 130


state 94

    9 stmt: GETC '(' variable . ')' ';'

    ')'  shift, and go to state 131


state 95

   11 stmt: PUTI '(' arg . ')' ';'

    ')'  shift, and go to state 132


state 96

   13 stmt: PUTS '(' arg . ')' ';'

    ')'  shift, and go to state 133


state 97

   12 stmt: PUTC '(' arg . ')' ';'

    ')'  shift, and go to state 134


state 98

   14 stmt: PUTI_ '(' arg . ')' ';'

    ')'  shift, and go to state 135


state 99

   16 stmt: PUTS_ '(' arg . ')' ';'

    ')'  shift, and go to state 136


state 100

   15 stmt: PUTC_ '(' arg . ')' ';'

    ')'  shift, and go to state 137


state 101

   63 expr: '(' expr ')' .

    $default  reduce using rule 63 (expr)


state 102

   27 stmt: DECL_VARIABLE '(' . param_list ')' ';'

    VARIABLE       shift, and go to state 46
    DECL_VARIABLE  shift, and go to state 42

    $default  reduce using rule 32 (param)

    param       go to state 84
    param_list  go to state 138
    variable    go to state 86


state 103

   26 stmt: '{' stmt_list '}' .

    $default  reduce using rule 26 (stmt)


state 104

   30 stmt_list: stmt_list stmt .

    $default  reduce using rule 30 (stmt_list)


state 105

   17 stmt: variable '=' expr . ';'
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    OR   shift, and go to state 67
    AND  shift, and go to state 68
    '>'  shift, and go to state 69
    '<'  shift, and go to state 70
    NE   shift, and go to state 71
    EQ   shift, and go to state 72
    LE   shift, and go to state 73
    GE   shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79
    ';'  shift, and go to state 139


state 106

   42 array_list: variable '[' expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    OR   shift, and go to state 67
    AND  shift, and go to state 68
    '>'  shift, and go to state 69
    '<'  shift, and go to state 70
    NE   shift, and go to state 71
    EQ   shift, and go to state 72
    LE   shift, and go to state 73
    GE   shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 42 (array_list)


state 107

   18 stmt: array '=' expr . ';'
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    OR   shift, and go to state 67
    AND  shift, and go to state 68
    '>'  shift, and go to state 69
    '<'  shift, and go to state 70
    NE   shift, and go to state 71
    EQ   shift, and go to state 72
    LE   shift, and go to state 73
    GE   shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79
    ';'  shift, and go to state 140


state 108

   43 array_list: array_list ']' '[' . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 141


state 109

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr
   62     | expr OR expr .

    '>'  shift, and go to state 69
    '<'  shift, and go to state 70
    NE   shift, and go to state 71
    EQ   shift, and go to state 72
    LE   shift, and go to state 73
    GE   shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 62 (expr)


state 110

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   61     | expr AND expr .
   62     | expr . OR expr

    '>'  shift, and go to state 69
    '<'  shift, and go to state 70
    NE   shift, and go to state 71
    EQ   shift, and go to state 72
    LE   shift, and go to state 73
    GE   shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 61 (expr)


state 111

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   56     | expr '>' expr .
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 56 (expr)


state 112

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   55     | expr '<' expr .
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 55 (expr)


state 113

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   59     | expr NE expr .
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 59 (expr)


state 114

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   60     | expr EQ expr .
   61     | expr . AND expr
   62     | expr . OR expr

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 60 (expr)


state 115

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   58     | expr LE expr .
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 58 (expr)


state 116

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   57     | expr GE expr .
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 57 (expr)


state 117

   50 expr: expr . '+' expr
   50     | expr '+' expr .
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 50 (expr)


state 118

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   51     | expr '-' expr .
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 51 (expr)


state 119

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   52     | expr '*' expr .
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    $default  reduce using rule 52 (expr)


state 120

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   54     | expr '/' expr .
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    $default  reduce using rule 54 (expr)


state 121

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   53     | expr '%' expr .
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    $default  reduce using rule 53 (expr)


state 122

   64 expr: VARIABLE '(' arg_list ')' .

    $default  reduce using rule 64 (expr)


state 123

   38 arg_list: arg_list ',' . arg

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 42
    '-'            shift, and go to state 25
    '('            shift, and go to state 26

    $default  reduce using rule 36 (arg)

    arg         go to state 142
    variable    go to state 43
    array       go to state 44
    array_list  go to state 33
    expr        go to state 83


state 124

    5 func_decl: DECL_VARIABLE '(' param_list ')' . '{' stmt_list '}'
   27 stmt: DECL_VARIABLE '(' param_list ')' . ';'

    '{'  shift, and go to state 143
    ';'  shift, and go to state 144


state 125

   34 param_list: param_list ',' . param

    VARIABLE       shift, and go to state 46
    DECL_VARIABLE  shift, and go to state 42

    $default  reduce using rule 32 (param)

    param     go to state 145
    variable  go to state 86


state 126

   19 stmt: FOR '(' stmt stmt . stmt ')' stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 60
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    RETURN         shift, and go to state 14
    DECL_ARRAY     shift, and go to state 15
    GETI           shift, and go to state 16
    GETS           shift, and go to state 17
    GETC           shift, and go to state 18
    PUTI           shift, and go to state 19
    PUTS           shift, and go to state 20
    PUTC           shift, and go to state 21
    PUTI_          shift, and go to state 22
    PUTS_          shift, and go to state 23
    PUTC_          shift, and go to state 24
    '-'            shift, and go to state 25
    '('            shift, and go to state 26
    '{'            shift, and go to state 27
    ';'            shift, and go to state 28

    stmt        go to state 146
    variable    go to state 31
    array       go to state 32
    array_list  go to state 33
    expr        go to state 34


state 127

   20 stmt: WHILE '(' expr ')' . stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 60
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    RETURN         shift, and go to state 14
    DECL_ARRAY     shift, and go to state 15
    GETI           shift, and go to state 16
    GETS           shift, and go to state 17
    GETC           shift, and go to state 18
    PUTI           shift, and go to state 19
    PUTS           shift, and go to state 20
    PUTC           shift, and go to state 21
    PUTI_          shift, and go to state 22
    PUTS_          shift, and go to state 23
    PUTC_          shift, and go to state 24
    '-'            shift, and go to state 25
    '('            shift, and go to state 26
    '{'            shift, and go to state 27
    ';'            shift, and go to state 28

    stmt        go to state 147
    variable    go to state 31
    array       go to state 32
    array_list  go to state 33
    expr        go to state 34


state 128

   21 stmt: IF '(' expr ')' . stmt
   22     | IF '(' expr ')' . stmt ELSE stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 60
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    RETURN         shift, and go to state 14
    DECL_ARRAY     shift, and go to state 15
    GETI           shift, and go to state 16
    GETS           shift, and go to state 17
    GETC           shift, and go to state 18
    PUTI           shift, and go to state 19
    PUTS           shift, and go to state 20
    PUTC           shift, and go to state 21
    PUTI_          shift, and go to state 22
    PUTS_          shift, and go to state 23
    PUTC_          shift, and go to state 24
    '-'            shift, and go to state 25
    '('            shift, and go to state 26
    '{'            shift, and go to state 27
    ';'            shift, and go to state 28

    stmt        go to state 148
    variable    go to state 31
    array       go to state 32
    array_list  go to state 33
    expr        go to state 34


state 129

    8 stmt: GETI '(' variable ')' . ';'

    ';'  shift, and go to state 149


state 130

   10 stmt: GETS '(' variable ')' . ';'

    ';'  shift, and go to state 150


state 131

    9 stmt: GETC '(' variable ')' . ';'

    ';'  shift, and go to state 151


state 132

   11 stmt: PUTI '(' arg ')' . ';'

    ';'  shift, and go to state 152


state 133

   13 stmt: PUTS '(' arg ')' . ';'

    ';'  shift, and go to state 153


state 134

   12 stmt: PUTC '(' arg ')' . ';'

    ';'  shift, and go to state 154


state 135

   14 stmt: PUTI_ '(' arg ')' . ';'

    ';'  shift, and go to state 155


state 136

   16 stmt: PUTS_ '(' arg ')' . ';'

    ';'  shift, and go to state 156


state 137

   15 stmt: PUTC_ '(' arg ')' . ';'

    ';'  shift, and go to state 157


state 138

   27 stmt: DECL_VARIABLE '(' param_list . ')' ';'
   34 param_list: param_list . ',' param

    ')'  shift, and go to state 158
    ','  shift, and go to state 125


state 139

   17 stmt: variable '=' expr ';' .

    $default  reduce using rule 17 (stmt)


state 140

   18 stmt: array '=' expr ';' .

    $default  reduce using rule 18 (stmt)


state 141

   43 array_list: array_list ']' '[' expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '%' expr
   54     | expr . '/' expr
   55     | expr . '<' expr
   56     | expr . '>' expr
   57     | expr . GE expr
   58     | expr . LE expr
   59     | expr . NE expr
   60     | expr . EQ expr
   61     | expr . AND expr
   62     | expr . OR expr

    OR   shift, and go to state 67
    AND  shift, and go to state 68
    '>'  shift, and go to state 69
    '<'  shift, and go to state 70
    NE   shift, and go to state 71
    EQ   shift, and go to state 72
    LE   shift, and go to state 73
    GE   shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 43 (array_list)


state 142

   38 arg_list: arg_list ',' arg .

    $default  reduce using rule 38 (arg_list)


state 143

    5 func_decl: DECL_VARIABLE '(' param_list ')' '{' . stmt_list '}'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 60
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    RETURN         shift, and go to state 14
    DECL_ARRAY     shift, and go to state 15
    GETI           shift, and go to state 16
    GETS           shift, and go to state 17
    GETC           shift, and go to state 18
    PUTI           shift, and go to state 19
    PUTS           shift, and go to state 20
    PUTC           shift, and go to state 21
    PUTI_          shift, and go to state 22
    PUTS_          shift, and go to state 23
    PUTC_          shift, and go to state 24
    '-'            shift, and go to state 25
    '('            shift, and go to state 26
    '{'            shift, and go to state 27
    ';'            shift, and go to state 28

    stmt        go to state 61
    stmt_list   go to state 159
    variable    go to state 31
    array       go to state 32
    array_list  go to state 33
    expr        go to state 34


state 144

   27 stmt: DECL_VARIABLE '(' param_list ')' ';' .

    $default  reduce using rule 27 (stmt)


state 145

   34 param_list: param_list ',' param .

    $default  reduce using rule 34 (param_list)


state 146

   19 stmt: FOR '(' stmt stmt stmt . ')' stmt

    ')'  shift, and go to state 160


state 147

   20 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 20 (stmt)


state 148

   21 stmt: IF '(' expr ')' stmt .
   22     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 161

    $default  reduce using rule 21 (stmt)


state 149

    8 stmt: GETI '(' variable ')' ';' .

    $default  reduce using rule 8 (stmt)


state 150

   10 stmt: GETS '(' variable ')' ';' .

    $default  reduce using rule 10 (stmt)


state 151

    9 stmt: GETC '(' variable ')' ';' .

    $default  reduce using rule 9 (stmt)


state 152

   11 stmt: PUTI '(' arg ')' ';' .

    $default  reduce using rule 11 (stmt)


state 153

   13 stmt: PUTS '(' arg ')' ';' .

    $default  reduce using rule 13 (stmt)


state 154

   12 stmt: PUTC '(' arg ')' ';' .

    $default  reduce using rule 12 (stmt)


state 155

   14 stmt: PUTI_ '(' arg ')' ';' .

    $default  reduce using rule 14 (stmt)


state 156

   16 stmt: PUTS_ '(' arg ')' ';' .

    $default  reduce using rule 16 (stmt)


state 157

   15 stmt: PUTC_ '(' arg ')' ';' .

    $default  reduce using rule 15 (stmt)


state 158

   27 stmt: DECL_VARIABLE '(' param_list ')' . ';'

    ';'  shift, and go to state 144


state 159

    5 func_decl: DECL_VARIABLE '(' param_list ')' '{' stmt_list . '}'
   30 stmt_list: stmt_list . stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 60
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    RETURN         shift, and go to state 14
    DECL_ARRAY     shift, and go to state 15
    GETI           shift, and go to state 16
    GETS           shift, and go to state 17
    GETC           shift, and go to state 18
    PUTI           shift, and go to state 19
    PUTS           shift, and go to state 20
    PUTC           shift, and go to state 21
    PUTI_          shift, and go to state 22
    PUTS_          shift, and go to state 23
    PUTC_          shift, and go to state 24
    '-'            shift, and go to state 25
    '('            shift, and go to state 26
    '{'            shift, and go to state 27
    '}'            shift, and go to state 162
    ';'            shift, and go to state 28

    stmt        go to state 104
    variable    go to state 31
    array       go to state 32
    array_list  go to state 33
    expr        go to state 34


state 160

   19 stmt: FOR '(' stmt stmt stmt ')' . stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 60
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    RETURN         shift, and go to state 14
    DECL_ARRAY     shift, and go to state 15
    GETI           shift, and go to state 16
    GETS           shift, and go to state 17
    GETC           shift, and go to state 18
    PUTI           shift, and go to state 19
    PUTS           shift, and go to state 20
    PUTC           shift, and go to state 21
    PUTI_          shift, and go to state 22
    PUTS_          shift, and go to state 23
    PUTC_          shift, and go to state 24
    '-'            shift, and go to state 25
    '('            shift, and go to state 26
    '{'            shift, and go to state 27
    ';'            shift, and go to state 28

    stmt        go to state 163
    variable    go to state 31
    array       go to state 32
    array_list  go to state 33
    expr        go to state 34


state 161

   22 stmt: IF '(' expr ')' stmt ELSE . stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 60
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    RETURN         shift, and go to state 14
    DECL_ARRAY     shift, and go to state 15
    GETI           shift, and go to state 16
    GETS           shift, and go to state 17
    GETC           shift, and go to state 18
    PUTI           shift, and go to state 19
    PUTS           shift, and go to state 20
    PUTC           shift, and go to state 21
    PUTI_          shift, and go to state 22
    PUTS_          shift, and go to state 23
    PUTC_          shift, and go to state 24
    '-'            shift, and go to state 25
    '('            shift, and go to state 26
    '{'            shift, and go to state 27
    ';'            shift, and go to state 28

    stmt        go to state 164
    variable    go to state 31
    array       go to state 32
    array_list  go to state 33
    expr        go to state 34


state 162

    5 func_decl: DECL_VARIABLE '(' param_list ')' '{' stmt_list '}' .

    $default  reduce using rule 5 (func_decl)


state 163

   19 stmt: FOR '(' stmt stmt stmt ')' stmt .

    $default  reduce using rule 19 (stmt)


state 164

   22 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 22 (stmt)
