State 8 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: main

    2 main: main stmt
    3     | /* empty */

    4 stmt: ';'
    5     | expr ';'
    6     | GETI '(' variable ')' ';'
    7     | GETC '(' variable ')' ';'
    8     | GETS '(' variable ')' ';'
    9     | PUTI '(' arg ')' ';'
   10     | PUTC '(' arg ')' ';'
   11     | PUTS '(' arg ')' ';'
   12     | PUTI_ '(' arg ')' ';'
   13     | PUTC_ '(' arg ')' ';'
   14     | PUTS_ '(' arg ')' ';'
   15     | variable '=' expr ';'
   16     | array '=' expr ';'
   17     | DECL_VARIABLE '(' param_list ')' '{' stmt_list '}'
   18     | FOR '(' stmt stmt stmt ')' stmt
   19     | WHILE '(' expr ')' stmt
   20     | IF '(' expr ')' stmt
   21     | IF '(' expr ')' stmt ELSE stmt
   22     | BREAK ';'
   23     | CONTINUE ';'
   24     | '{' stmt_list '}'

   25 stmt_list: stmt
   26          | stmt_list stmt

   27 param: variable
   28      | /* empty */

   29 param_list: param
   30           | param_list ',' param

   31 arg: expr
   32    | /* empty */

   33 arg_list: arg
   34         | arg_list ',' arg

   35 variable: VARIABLE
   36         | DECL_VARIABLE

   37 array: VARIABLE '[' expr ']'

   38 expr: INTEGER
   39     | CHAR
   40     | STRING
   41     | variable
   42     | array
   43     | '-' expr
   44     | expr '+' expr
   45     | expr '-' expr
   46     | expr '*' expr
   47     | expr '%' expr
   48     | expr '/' expr
   49     | expr '<' expr
   50     | expr '>' expr
   51     | expr GE expr
   52     | expr LE expr
   53     | expr NE expr
   54     | expr EQ expr
   55     | expr AND expr
   56     | expr OR expr
   57     | '(' expr ')'
   58     | variable '(' arg_list ')'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 47
'(' (40) 6 7 8 9 10 11 12 13 14 17 18 19 20 21 57 58
')' (41) 6 7 8 9 10 11 12 13 14 17 18 19 20 21 57 58
'*' (42) 46
'+' (43) 44
',' (44) 30 34
'-' (45) 43 45
'/' (47) 48
';' (59) 4 5 6 7 8 9 10 11 12 13 14 15 16 22 23
'<' (60) 49
'=' (61) 15 16
'>' (62) 50
'[' (91) 37
']' (93) 37
'{' (123) 17 24
'}' (125) 17 24
error (256)
INTEGER (258) 38
CHAR (259) 39
STRING (260) 40
VARIABLE (261) 35 37
DECL_VARIABLE (262) 17 36
FOR (263) 18
WHILE (264) 19
IF (265) 20 21
BREAK (266) 22
CONTINUE (267) 23
GETI (268) 6
GETS (269) 8
GETC (270) 7
PUTI (271) 9
PUTS (272) 11
PUTC (273) 10
PUTI_ (274) 12
PUTS_ (275) 14
PUTC_ (276) 13
IFX (277)
ELSE (278) 21
OR (279) 56
AND (280) 55
NE (281) 53
EQ (282) 54
LE (283) 52
GE (284) 51
UMINUS (285)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
main (49)
    on left: 2 3, on right: 1 2
stmt (50)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24, on right: 2 18 19 20 21 25 26
stmt_list (51)
    on left: 25 26, on right: 17 24 26
param (52)
    on left: 27 28, on right: 29 30
param_list (53)
    on left: 29 30, on right: 17 30
arg (54)
    on left: 31 32, on right: 9 10 11 12 13 14 33 34
arg_list (55)
    on left: 33 34, on right: 34 58
variable (56)
    on left: 35 36, on right: 6 7 8 15 27 41 58
array (57)
    on left: 37, on right: 16 42
expr (58)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
    56 57 58, on right: 5 15 16 19 20 21 31 37 43 44 45 46 47 48 49
    50 51 52 53 54 55 56 57


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (main)

    program  go to state 1
    main     go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: main .
    2 main: main . stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    GETI           shift, and go to state 14
    GETS           shift, and go to state 15
    GETC           shift, and go to state 16
    PUTI           shift, and go to state 17
    PUTS           shift, and go to state 18
    PUTC           shift, and go to state 19
    PUTI_          shift, and go to state 20
    PUTS_          shift, and go to state 21
    PUTC_          shift, and go to state 22
    '-'            shift, and go to state 23
    ';'            shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26

    $default  reduce using rule 1 (program)

    stmt      go to state 27
    variable  go to state 28
    array     go to state 29
    expr      go to state 30


state 3

    0 $accept: program $end .

    $default  accept


state 4

   38 expr: INTEGER .

    $default  reduce using rule 38 (expr)


state 5

   39 expr: CHAR .

    $default  reduce using rule 39 (expr)


state 6

   40 expr: STRING .

    $default  reduce using rule 40 (expr)


state 7

   35 variable: VARIABLE .
   37 array: VARIABLE . '[' expr ']'

    '['  shift, and go to state 31

    $default  reduce using rule 35 (variable)


state 8

   17 stmt: DECL_VARIABLE . '(' param_list ')' '{' stmt_list '}'
   36 variable: DECL_VARIABLE .

    '('  shift, and go to state 32

    '('       [reduce using rule 36 (variable)]
    $default  reduce using rule 36 (variable)


state 9

   18 stmt: FOR . '(' stmt stmt stmt ')' stmt

    '('  shift, and go to state 33


state 10

   19 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 34


state 11

   20 stmt: IF . '(' expr ')' stmt
   21     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 35


state 12

   22 stmt: BREAK . ';'

    ';'  shift, and go to state 36


state 13

   23 stmt: CONTINUE . ';'

    ';'  shift, and go to state 37


state 14

    6 stmt: GETI . '(' variable ')' ';'

    '('  shift, and go to state 38


state 15

    8 stmt: GETS . '(' variable ')' ';'

    '('  shift, and go to state 39


state 16

    7 stmt: GETC . '(' variable ')' ';'

    '('  shift, and go to state 40


state 17

    9 stmt: PUTI . '(' arg ')' ';'

    '('  shift, and go to state 41


state 18

   11 stmt: PUTS . '(' arg ')' ';'

    '('  shift, and go to state 42


state 19

   10 stmt: PUTC . '(' arg ')' ';'

    '('  shift, and go to state 43


state 20

   12 stmt: PUTI_ . '(' arg ')' ';'

    '('  shift, and go to state 44


state 21

   14 stmt: PUTS_ . '(' arg ')' ';'

    '('  shift, and go to state 45


state 22

   13 stmt: PUTC_ . '(' arg ')' ';'

    '('  shift, and go to state 46


state 23

   43 expr: '-' . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 50


state 24

    4 stmt: ';' .

    $default  reduce using rule 4 (stmt)


state 25

   57 expr: '(' . expr ')'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 51


state 26

   24 stmt: '{' . stmt_list '}'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    GETI           shift, and go to state 14
    GETS           shift, and go to state 15
    GETC           shift, and go to state 16
    PUTI           shift, and go to state 17
    PUTS           shift, and go to state 18
    PUTC           shift, and go to state 19
    PUTI_          shift, and go to state 20
    PUTS_          shift, and go to state 21
    PUTC_          shift, and go to state 22
    '-'            shift, and go to state 23
    ';'            shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26

    stmt       go to state 52
    stmt_list  go to state 53
    variable   go to state 28
    array      go to state 29
    expr       go to state 30


state 27

    2 main: main stmt .

    $default  reduce using rule 2 (main)


state 28

   15 stmt: variable . '=' expr ';'
   41 expr: variable .
   58     | variable . '(' arg_list ')'

    '('  shift, and go to state 54
    '='  shift, and go to state 55

    $default  reduce using rule 41 (expr)


state 29

   16 stmt: array . '=' expr ';'
   42 expr: array .

    '='  shift, and go to state 56

    $default  reduce using rule 42 (expr)


state 30

    5 stmt: expr . ';'
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr

    OR   shift, and go to state 57
    AND  shift, and go to state 58
    '>'  shift, and go to state 59
    '<'  shift, and go to state 60
    NE   shift, and go to state 61
    EQ   shift, and go to state 62
    LE   shift, and go to state 63
    GE   shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69
    ';'  shift, and go to state 70


state 31

   37 array: VARIABLE '[' . expr ']'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 71


state 32

   17 stmt: DECL_VARIABLE '(' . param_list ')' '{' stmt_list '}'

    VARIABLE       shift, and go to state 72
    DECL_VARIABLE  shift, and go to state 47

    $default  reduce using rule 28 (param)

    param       go to state 73
    param_list  go to state 74
    variable    go to state 75


state 33

   18 stmt: FOR '(' . stmt stmt stmt ')' stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    GETI           shift, and go to state 14
    GETS           shift, and go to state 15
    GETC           shift, and go to state 16
    PUTI           shift, and go to state 17
    PUTS           shift, and go to state 18
    PUTC           shift, and go to state 19
    PUTI_          shift, and go to state 20
    PUTS_          shift, and go to state 21
    PUTC_          shift, and go to state 22
    '-'            shift, and go to state 23
    ';'            shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26

    stmt      go to state 76
    variable  go to state 28
    array     go to state 29
    expr      go to state 30


state 34

   19 stmt: WHILE '(' . expr ')' stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 77


state 35

   20 stmt: IF '(' . expr ')' stmt
   21     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 78


state 36

   22 stmt: BREAK ';' .

    $default  reduce using rule 22 (stmt)


state 37

   23 stmt: CONTINUE ';' .

    $default  reduce using rule 23 (stmt)


state 38

    6 stmt: GETI '(' . variable ')' ';'

    VARIABLE       shift, and go to state 72
    DECL_VARIABLE  shift, and go to state 47

    variable  go to state 79


state 39

    8 stmt: GETS '(' . variable ')' ';'

    VARIABLE       shift, and go to state 72
    DECL_VARIABLE  shift, and go to state 47

    variable  go to state 80


state 40

    7 stmt: GETC '(' . variable ')' ';'

    VARIABLE       shift, and go to state 72
    DECL_VARIABLE  shift, and go to state 47

    variable  go to state 81


state 41

    9 stmt: PUTI '(' . arg ')' ';'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    $default  reduce using rule 32 (arg)

    arg       go to state 82
    variable  go to state 48
    array     go to state 49
    expr      go to state 83


state 42

   11 stmt: PUTS '(' . arg ')' ';'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    $default  reduce using rule 32 (arg)

    arg       go to state 84
    variable  go to state 48
    array     go to state 49
    expr      go to state 83


state 43

   10 stmt: PUTC '(' . arg ')' ';'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    $default  reduce using rule 32 (arg)

    arg       go to state 85
    variable  go to state 48
    array     go to state 49
    expr      go to state 83


state 44

   12 stmt: PUTI_ '(' . arg ')' ';'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    $default  reduce using rule 32 (arg)

    arg       go to state 86
    variable  go to state 48
    array     go to state 49
    expr      go to state 83


state 45

   14 stmt: PUTS_ '(' . arg ')' ';'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    $default  reduce using rule 32 (arg)

    arg       go to state 87
    variable  go to state 48
    array     go to state 49
    expr      go to state 83


state 46

   13 stmt: PUTC_ '(' . arg ')' ';'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    $default  reduce using rule 32 (arg)

    arg       go to state 88
    variable  go to state 48
    array     go to state 49
    expr      go to state 83


state 47

   36 variable: DECL_VARIABLE .

    $default  reduce using rule 36 (variable)


state 48

   41 expr: variable .
   58     | variable . '(' arg_list ')'

    '('  shift, and go to state 54

    $default  reduce using rule 41 (expr)


state 49

   42 expr: array .

    $default  reduce using rule 42 (expr)


state 50

   43 expr: '-' expr .
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr

    $default  reduce using rule 43 (expr)


state 51

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr
   57     | '(' expr . ')'

    OR   shift, and go to state 57
    AND  shift, and go to state 58
    '>'  shift, and go to state 59
    '<'  shift, and go to state 60
    NE   shift, and go to state 61
    EQ   shift, and go to state 62
    LE   shift, and go to state 63
    GE   shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69
    ')'  shift, and go to state 89


state 52

   25 stmt_list: stmt .

    $default  reduce using rule 25 (stmt_list)


state 53

   24 stmt: '{' stmt_list . '}'
   26 stmt_list: stmt_list . stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    GETI           shift, and go to state 14
    GETS           shift, and go to state 15
    GETC           shift, and go to state 16
    PUTI           shift, and go to state 17
    PUTS           shift, and go to state 18
    PUTC           shift, and go to state 19
    PUTI_          shift, and go to state 20
    PUTS_          shift, and go to state 21
    PUTC_          shift, and go to state 22
    '-'            shift, and go to state 23
    ';'            shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26
    '}'            shift, and go to state 90

    stmt      go to state 91
    variable  go to state 28
    array     go to state 29
    expr      go to state 30


state 54

   58 expr: variable '(' . arg_list ')'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    $default  reduce using rule 32 (arg)

    arg       go to state 92
    arg_list  go to state 93
    variable  go to state 48
    array     go to state 49
    expr      go to state 83


state 55

   15 stmt: variable '=' . expr ';'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 94


state 56

   16 stmt: array '=' . expr ';'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 95


state 57

   56 expr: expr OR . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 96


state 58

   55 expr: expr AND . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 97


state 59

   50 expr: expr '>' . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 98


state 60

   49 expr: expr '<' . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 99


state 61

   53 expr: expr NE . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 100


state 62

   54 expr: expr EQ . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 101


state 63

   52 expr: expr LE . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 102


state 64

   51 expr: expr GE . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 103


state 65

   44 expr: expr '+' . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 104


state 66

   45 expr: expr '-' . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 105


state 67

   46 expr: expr '*' . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 106


state 68

   48 expr: expr '/' . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 107


state 69

   47 expr: expr '%' . expr

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    variable  go to state 48
    array     go to state 49
    expr      go to state 108


state 70

    5 stmt: expr ';' .

    $default  reduce using rule 5 (stmt)


state 71

   37 array: VARIABLE '[' expr . ']'
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr

    OR   shift, and go to state 57
    AND  shift, and go to state 58
    '>'  shift, and go to state 59
    '<'  shift, and go to state 60
    NE   shift, and go to state 61
    EQ   shift, and go to state 62
    LE   shift, and go to state 63
    GE   shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69
    ']'  shift, and go to state 109


state 72

   35 variable: VARIABLE .

    $default  reduce using rule 35 (variable)


state 73

   29 param_list: param .

    $default  reduce using rule 29 (param_list)


state 74

   17 stmt: DECL_VARIABLE '(' param_list . ')' '{' stmt_list '}'
   30 param_list: param_list . ',' param

    ')'  shift, and go to state 110
    ','  shift, and go to state 111


state 75

   27 param: variable .

    $default  reduce using rule 27 (param)


state 76

   18 stmt: FOR '(' stmt . stmt stmt ')' stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    GETI           shift, and go to state 14
    GETS           shift, and go to state 15
    GETC           shift, and go to state 16
    PUTI           shift, and go to state 17
    PUTS           shift, and go to state 18
    PUTC           shift, and go to state 19
    PUTI_          shift, and go to state 20
    PUTS_          shift, and go to state 21
    PUTC_          shift, and go to state 22
    '-'            shift, and go to state 23
    ';'            shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26

    stmt      go to state 112
    variable  go to state 28
    array     go to state 29
    expr      go to state 30


state 77

   19 stmt: WHILE '(' expr . ')' stmt
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr

    OR   shift, and go to state 57
    AND  shift, and go to state 58
    '>'  shift, and go to state 59
    '<'  shift, and go to state 60
    NE   shift, and go to state 61
    EQ   shift, and go to state 62
    LE   shift, and go to state 63
    GE   shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69
    ')'  shift, and go to state 113


state 78

   20 stmt: IF '(' expr . ')' stmt
   21     | IF '(' expr . ')' stmt ELSE stmt
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr

    OR   shift, and go to state 57
    AND  shift, and go to state 58
    '>'  shift, and go to state 59
    '<'  shift, and go to state 60
    NE   shift, and go to state 61
    EQ   shift, and go to state 62
    LE   shift, and go to state 63
    GE   shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69
    ')'  shift, and go to state 114


state 79

    6 stmt: GETI '(' variable . ')' ';'

    ')'  shift, and go to state 115


state 80

    8 stmt: GETS '(' variable . ')' ';'

    ')'  shift, and go to state 116


state 81

    7 stmt: GETC '(' variable . ')' ';'

    ')'  shift, and go to state 117


state 82

    9 stmt: PUTI '(' arg . ')' ';'

    ')'  shift, and go to state 118


state 83

   31 arg: expr .
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr

    OR   shift, and go to state 57
    AND  shift, and go to state 58
    '>'  shift, and go to state 59
    '<'  shift, and go to state 60
    NE   shift, and go to state 61
    EQ   shift, and go to state 62
    LE   shift, and go to state 63
    GE   shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 31 (arg)


state 84

   11 stmt: PUTS '(' arg . ')' ';'

    ')'  shift, and go to state 119


state 85

   10 stmt: PUTC '(' arg . ')' ';'

    ')'  shift, and go to state 120


state 86

   12 stmt: PUTI_ '(' arg . ')' ';'

    ')'  shift, and go to state 121


state 87

   14 stmt: PUTS_ '(' arg . ')' ';'

    ')'  shift, and go to state 122


state 88

   13 stmt: PUTC_ '(' arg . ')' ';'

    ')'  shift, and go to state 123


state 89

   57 expr: '(' expr ')' .

    $default  reduce using rule 57 (expr)


state 90

   24 stmt: '{' stmt_list '}' .

    $default  reduce using rule 24 (stmt)


state 91

   26 stmt_list: stmt_list stmt .

    $default  reduce using rule 26 (stmt_list)


state 92

   33 arg_list: arg .

    $default  reduce using rule 33 (arg_list)


state 93

   34 arg_list: arg_list . ',' arg
   58 expr: variable '(' arg_list . ')'

    ')'  shift, and go to state 124
    ','  shift, and go to state 125


state 94

   15 stmt: variable '=' expr . ';'
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr

    OR   shift, and go to state 57
    AND  shift, and go to state 58
    '>'  shift, and go to state 59
    '<'  shift, and go to state 60
    NE   shift, and go to state 61
    EQ   shift, and go to state 62
    LE   shift, and go to state 63
    GE   shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69
    ';'  shift, and go to state 126


state 95

   16 stmt: array '=' expr . ';'
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr

    OR   shift, and go to state 57
    AND  shift, and go to state 58
    '>'  shift, and go to state 59
    '<'  shift, and go to state 60
    NE   shift, and go to state 61
    EQ   shift, and go to state 62
    LE   shift, and go to state 63
    GE   shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69
    ';'  shift, and go to state 127


state 96

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr
   56     | expr OR expr .

    '>'  shift, and go to state 59
    '<'  shift, and go to state 60
    NE   shift, and go to state 61
    EQ   shift, and go to state 62
    LE   shift, and go to state 63
    GE   shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 56 (expr)


state 97

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   55     | expr AND expr .
   56     | expr . OR expr

    '>'  shift, and go to state 59
    '<'  shift, and go to state 60
    NE   shift, and go to state 61
    EQ   shift, and go to state 62
    LE   shift, and go to state 63
    GE   shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 55 (expr)


state 98

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   50     | expr '>' expr .
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr

    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 50 (expr)


state 99

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   49     | expr '<' expr .
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr

    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 49 (expr)


state 100

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   53     | expr NE expr .
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr

    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 53 (expr)


state 101

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   54     | expr EQ expr .
   55     | expr . AND expr
   56     | expr . OR expr

    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 54 (expr)


state 102

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   52     | expr LE expr .
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr

    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 52 (expr)


state 103

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   51     | expr GE expr .
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr

    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 51 (expr)


state 104

   44 expr: expr . '+' expr
   44     | expr '+' expr .
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr

    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 44 (expr)


state 105

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   45     | expr '-' expr .
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr

    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 45 (expr)


state 106

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   46     | expr '*' expr .
   47     | expr . '%' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr

    $default  reduce using rule 46 (expr)


state 107

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   48     | expr . '/' expr
   48     | expr '/' expr .
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr

    $default  reduce using rule 48 (expr)


state 108

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '%' expr
   47     | expr '%' expr .
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | expr . AND expr
   56     | expr . OR expr

    $default  reduce using rule 47 (expr)


state 109

   37 array: VARIABLE '[' expr ']' .

    $default  reduce using rule 37 (array)


state 110

   17 stmt: DECL_VARIABLE '(' param_list ')' . '{' stmt_list '}'

    '{'  shift, and go to state 128


state 111

   30 param_list: param_list ',' . param

    VARIABLE       shift, and go to state 72
    DECL_VARIABLE  shift, and go to state 47

    $default  reduce using rule 28 (param)

    param     go to state 129
    variable  go to state 75


state 112

   18 stmt: FOR '(' stmt stmt . stmt ')' stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    GETI           shift, and go to state 14
    GETS           shift, and go to state 15
    GETC           shift, and go to state 16
    PUTI           shift, and go to state 17
    PUTS           shift, and go to state 18
    PUTC           shift, and go to state 19
    PUTI_          shift, and go to state 20
    PUTS_          shift, and go to state 21
    PUTC_          shift, and go to state 22
    '-'            shift, and go to state 23
    ';'            shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26

    stmt      go to state 130
    variable  go to state 28
    array     go to state 29
    expr      go to state 30


state 113

   19 stmt: WHILE '(' expr ')' . stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    GETI           shift, and go to state 14
    GETS           shift, and go to state 15
    GETC           shift, and go to state 16
    PUTI           shift, and go to state 17
    PUTS           shift, and go to state 18
    PUTC           shift, and go to state 19
    PUTI_          shift, and go to state 20
    PUTS_          shift, and go to state 21
    PUTC_          shift, and go to state 22
    '-'            shift, and go to state 23
    ';'            shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26

    stmt      go to state 131
    variable  go to state 28
    array     go to state 29
    expr      go to state 30


state 114

   20 stmt: IF '(' expr ')' . stmt
   21     | IF '(' expr ')' . stmt ELSE stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    GETI           shift, and go to state 14
    GETS           shift, and go to state 15
    GETC           shift, and go to state 16
    PUTI           shift, and go to state 17
    PUTS           shift, and go to state 18
    PUTC           shift, and go to state 19
    PUTI_          shift, and go to state 20
    PUTS_          shift, and go to state 21
    PUTC_          shift, and go to state 22
    '-'            shift, and go to state 23
    ';'            shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26

    stmt      go to state 132
    variable  go to state 28
    array     go to state 29
    expr      go to state 30


state 115

    6 stmt: GETI '(' variable ')' . ';'

    ';'  shift, and go to state 133


state 116

    8 stmt: GETS '(' variable ')' . ';'

    ';'  shift, and go to state 134


state 117

    7 stmt: GETC '(' variable ')' . ';'

    ';'  shift, and go to state 135


state 118

    9 stmt: PUTI '(' arg ')' . ';'

    ';'  shift, and go to state 136


state 119

   11 stmt: PUTS '(' arg ')' . ';'

    ';'  shift, and go to state 137


state 120

   10 stmt: PUTC '(' arg ')' . ';'

    ';'  shift, and go to state 138


state 121

   12 stmt: PUTI_ '(' arg ')' . ';'

    ';'  shift, and go to state 139


state 122

   14 stmt: PUTS_ '(' arg ')' . ';'

    ';'  shift, and go to state 140


state 123

   13 stmt: PUTC_ '(' arg ')' . ';'

    ';'  shift, and go to state 141


state 124

   58 expr: variable '(' arg_list ')' .

    $default  reduce using rule 58 (expr)


state 125

   34 arg_list: arg_list ',' . arg

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 47
    '-'            shift, and go to state 23
    '('            shift, and go to state 25

    $default  reduce using rule 32 (arg)

    arg       go to state 142
    variable  go to state 48
    array     go to state 49
    expr      go to state 83


state 126

   15 stmt: variable '=' expr ';' .

    $default  reduce using rule 15 (stmt)


state 127

   16 stmt: array '=' expr ';' .

    $default  reduce using rule 16 (stmt)


state 128

   17 stmt: DECL_VARIABLE '(' param_list ')' '{' . stmt_list '}'

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    GETI           shift, and go to state 14
    GETS           shift, and go to state 15
    GETC           shift, and go to state 16
    PUTI           shift, and go to state 17
    PUTS           shift, and go to state 18
    PUTC           shift, and go to state 19
    PUTI_          shift, and go to state 20
    PUTS_          shift, and go to state 21
    PUTC_          shift, and go to state 22
    '-'            shift, and go to state 23
    ';'            shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26

    stmt       go to state 52
    stmt_list  go to state 143
    variable   go to state 28
    array      go to state 29
    expr       go to state 30


state 129

   30 param_list: param_list ',' param .

    $default  reduce using rule 30 (param_list)


state 130

   18 stmt: FOR '(' stmt stmt stmt . ')' stmt

    ')'  shift, and go to state 144


state 131

   19 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 19 (stmt)


state 132

   20 stmt: IF '(' expr ')' stmt .
   21     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 145

    $default  reduce using rule 20 (stmt)


state 133

    6 stmt: GETI '(' variable ')' ';' .

    $default  reduce using rule 6 (stmt)


state 134

    8 stmt: GETS '(' variable ')' ';' .

    $default  reduce using rule 8 (stmt)


state 135

    7 stmt: GETC '(' variable ')' ';' .

    $default  reduce using rule 7 (stmt)


state 136

    9 stmt: PUTI '(' arg ')' ';' .

    $default  reduce using rule 9 (stmt)


state 137

   11 stmt: PUTS '(' arg ')' ';' .

    $default  reduce using rule 11 (stmt)


state 138

   10 stmt: PUTC '(' arg ')' ';' .

    $default  reduce using rule 10 (stmt)


state 139

   12 stmt: PUTI_ '(' arg ')' ';' .

    $default  reduce using rule 12 (stmt)


state 140

   14 stmt: PUTS_ '(' arg ')' ';' .

    $default  reduce using rule 14 (stmt)


state 141

   13 stmt: PUTC_ '(' arg ')' ';' .

    $default  reduce using rule 13 (stmt)


state 142

   34 arg_list: arg_list ',' arg .

    $default  reduce using rule 34 (arg_list)


state 143

   17 stmt: DECL_VARIABLE '(' param_list ')' '{' stmt_list . '}'
   26 stmt_list: stmt_list . stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    GETI           shift, and go to state 14
    GETS           shift, and go to state 15
    GETC           shift, and go to state 16
    PUTI           shift, and go to state 17
    PUTS           shift, and go to state 18
    PUTC           shift, and go to state 19
    PUTI_          shift, and go to state 20
    PUTS_          shift, and go to state 21
    PUTC_          shift, and go to state 22
    '-'            shift, and go to state 23
    ';'            shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26
    '}'            shift, and go to state 146

    stmt      go to state 91
    variable  go to state 28
    array     go to state 29
    expr      go to state 30


state 144

   18 stmt: FOR '(' stmt stmt stmt ')' . stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    GETI           shift, and go to state 14
    GETS           shift, and go to state 15
    GETC           shift, and go to state 16
    PUTI           shift, and go to state 17
    PUTS           shift, and go to state 18
    PUTC           shift, and go to state 19
    PUTI_          shift, and go to state 20
    PUTS_          shift, and go to state 21
    PUTC_          shift, and go to state 22
    '-'            shift, and go to state 23
    ';'            shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26

    stmt      go to state 147
    variable  go to state 28
    array     go to state 29
    expr      go to state 30


state 145

   21 stmt: IF '(' expr ')' stmt ELSE . stmt

    INTEGER        shift, and go to state 4
    CHAR           shift, and go to state 5
    STRING         shift, and go to state 6
    VARIABLE       shift, and go to state 7
    DECL_VARIABLE  shift, and go to state 8
    FOR            shift, and go to state 9
    WHILE          shift, and go to state 10
    IF             shift, and go to state 11
    BREAK          shift, and go to state 12
    CONTINUE       shift, and go to state 13
    GETI           shift, and go to state 14
    GETS           shift, and go to state 15
    GETC           shift, and go to state 16
    PUTI           shift, and go to state 17
    PUTS           shift, and go to state 18
    PUTC           shift, and go to state 19
    PUTI_          shift, and go to state 20
    PUTS_          shift, and go to state 21
    PUTC_          shift, and go to state 22
    '-'            shift, and go to state 23
    ';'            shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26

    stmt      go to state 148
    variable  go to state 28
    array     go to state 29
    expr      go to state 30


state 146

   17 stmt: DECL_VARIABLE '(' param_list ')' '{' stmt_list '}' .

    $default  reduce using rule 17 (stmt)


state 147

   18 stmt: FOR '(' stmt stmt stmt ')' stmt .

    $default  reduce using rule 18 (stmt)


state 148

   21 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 21 (stmt)
