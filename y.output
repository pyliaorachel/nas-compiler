State 7 conflicts: 1 shift/reduce, 15 reduce/reduce
State 30 conflicts: 1 shift/reduce, 17 reduce/reduce
State 31 conflicts: 2 reduce/reduce
State 36 conflicts: 1 shift/reduce
State 37 conflicts: 2 reduce/reduce
State 39 conflicts: 13 shift/reduce
State 78 conflicts: 1 shift/reduce
State 82 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: main

    2 main: main stmt
    3     | /* empty */

    4 stmt: ';'
    5     | expr ';'
    6     | GETI '(' variable ')' ';'
    7     | GETC '(' variable ')' ';'
    8     | GETS '(' variable ')' ';'
    9     | PUTI '(' arg ')' ';'
   10     | PUTC '(' arg ')' ';'
   11     | PUTS '(' arg ')' ';'
   12     | PUTI_ '(' arg ')' ';'
   13     | PUTC_ '(' arg ')' ';'
   14     | PUTS_ '(' arg ')' ';'
   15     | variable '=' expr ';'
   16     | array '=' expr ';'
   17     | VARIABLE param_list '{' stmt_list '}'
   18     | FOR '(' stmt stmt stmt ')' stmt
   19     | WHILE '(' expr ')' stmt
   20     | IF '(' expr ')' stmt
   21     | IF '(' expr ')' stmt ELSE stmt
   22     | BREAK ';'
   23     | CONTINUE ';'
   24     | '{' stmt_list '}'

   25 stmt_list: stmt
   26          | stmt_list stmt

   27 param: variable
   28      | /* empty */

   29 param_list: param
   30           | param_list ',' param
   31           | '(' param_list ')'

   32 arg: expr
   33    | /* empty */

   34 arg_list: arg
   35         | arg_list ',' arg
   36         | '(' arg_list ')'

   37 variable: VARIABLE

   38 array: VARIABLE '[' expr ']'

   39 expr: INTEGER
   40     | CHAR
   41     | STRING
   42     | variable
   43     | array
   44     | '-' expr
   45     | expr '+' expr
   46     | expr '-' expr
   47     | expr '*' expr
   48     | expr '%' expr
   49     | expr '/' expr
   50     | expr '<' expr
   51     | expr '>' expr
   52     | expr GE expr
   53     | expr LE expr
   54     | expr NE expr
   55     | expr EQ expr
   56     | expr AND expr
   57     | expr OR expr
   58     | '(' expr ')'
   59     | VARIABLE arg_list


Terminals, with rules where they appear

$end (0) 0
'%' (37) 48
'(' (40) 6 7 8 9 10 11 12 13 14 18 19 20 21 31 36 58
')' (41) 6 7 8 9 10 11 12 13 14 18 19 20 21 31 36 58
'*' (42) 47
'+' (43) 45
',' (44) 30 35
'-' (45) 44 46
'/' (47) 49
';' (59) 4 5 6 7 8 9 10 11 12 13 14 15 16 22 23
'<' (60) 50
'=' (61) 15 16
'>' (62) 51
'[' (91) 38
']' (93) 38
'{' (123) 17 24
'}' (125) 17 24
error (256)
INTEGER (258) 39
CHAR (259) 40
STRING (260) 41
VARIABLE (261) 17 37 38 59
FOR (262) 18
WHILE (263) 19
IF (264) 20 21
BREAK (265) 22
CONTINUE (266) 23
GETI (267) 6
GETS (268) 8
GETC (269) 7
PUTI (270) 9
PUTS (271) 11
PUTC (272) 10
PUTI_ (273) 12
PUTS_ (274) 14
PUTC_ (275) 13
IFX (276)
ELSE (277) 21
OR (278) 57
AND (279) 56
NE (280) 54
EQ (281) 55
LE (282) 53
GE (283) 52
UMINUS (284)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
main (48)
    on left: 2 3, on right: 1 2
stmt (49)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24, on right: 2 18 19 20 21 25 26
stmt_list (50)
    on left: 25 26, on right: 17 24 26
param (51)
    on left: 27 28, on right: 29 30
param_list (52)
    on left: 29 30 31, on right: 17 30 31
arg (53)
    on left: 32 33, on right: 9 10 11 12 13 14 34 35
arg_list (54)
    on left: 34 35 36, on right: 35 36 59
variable (55)
    on left: 37, on right: 6 7 8 15 27 42
array (56)
    on left: 38, on right: 16 43
expr (57)
    on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
    57 58 59, on right: 5 15 16 19 20 21 32 38 44 45 46 47 48 49 50
    51 52 53 54 55 56 57 58


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (main)

    program  go to state 1
    main     go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: main .
    2 main: main . stmt

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 7
    FOR       shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    BREAK     shift, and go to state 11
    CONTINUE  shift, and go to state 12
    GETI      shift, and go to state 13
    GETS      shift, and go to state 14
    GETC      shift, and go to state 15
    PUTI      shift, and go to state 16
    PUTS      shift, and go to state 17
    PUTC      shift, and go to state 18
    PUTI_     shift, and go to state 19
    PUTS_     shift, and go to state 20
    PUTC_     shift, and go to state 21
    '-'       shift, and go to state 22
    ';'       shift, and go to state 23
    '('       shift, and go to state 24
    '{'       shift, and go to state 25

    $default  reduce using rule 1 (program)

    stmt      go to state 26
    variable  go to state 27
    array     go to state 28
    expr      go to state 29


state 3

    0 $accept: program $end .

    $default  accept


state 4

   39 expr: INTEGER .

    $default  reduce using rule 39 (expr)


state 5

   40 expr: CHAR .

    $default  reduce using rule 40 (expr)


state 6

   41 expr: STRING .

    $default  reduce using rule 41 (expr)


state 7

   17 stmt: VARIABLE . param_list '{' stmt_list '}'
   37 variable: VARIABLE .
   38 array: VARIABLE . '[' expr ']'
   59 expr: VARIABLE . arg_list

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 31
    '['       shift, and go to state 32

    OR        reduce using rule 33 (arg)
    OR        [reduce using rule 37 (variable)]
    AND       reduce using rule 33 (arg)
    AND       [reduce using rule 37 (variable)]
    '>'       reduce using rule 33 (arg)
    '>'       [reduce using rule 37 (variable)]
    '<'       reduce using rule 33 (arg)
    '<'       [reduce using rule 37 (variable)]
    NE        reduce using rule 33 (arg)
    NE        [reduce using rule 37 (variable)]
    EQ        reduce using rule 33 (arg)
    EQ        [reduce using rule 37 (variable)]
    LE        reduce using rule 33 (arg)
    LE        [reduce using rule 37 (variable)]
    GE        reduce using rule 33 (arg)
    GE        [reduce using rule 37 (variable)]
    '+'       reduce using rule 33 (arg)
    '+'       [reduce using rule 37 (variable)]
    '-'       [reduce using rule 33 (arg)]
    '-'       [reduce using rule 37 (variable)]
    '*'       reduce using rule 33 (arg)
    '*'       [reduce using rule 37 (variable)]
    '/'       reduce using rule 33 (arg)
    '/'       [reduce using rule 37 (variable)]
    '%'       reduce using rule 33 (arg)
    '%'       [reduce using rule 37 (variable)]
    ';'       reduce using rule 33 (arg)
    ';'       [reduce using rule 37 (variable)]
    '='       reduce using rule 37 (variable)
    '{'       reduce using rule 28 (param)
    ','       reduce using rule 28 (param)
    ','       [reduce using rule 33 (arg)]
    $default  reduce using rule 33 (arg)

    param       go to state 33
    param_list  go to state 34
    arg         go to state 35
    arg_list    go to state 36
    variable    go to state 37
    array       go to state 38
    expr        go to state 39


state 8

   18 stmt: FOR . '(' stmt stmt stmt ')' stmt

    '('  shift, and go to state 40


state 9

   19 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 41


state 10

   20 stmt: IF . '(' expr ')' stmt
   21     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 42


state 11

   22 stmt: BREAK . ';'

    ';'  shift, and go to state 43


state 12

   23 stmt: CONTINUE . ';'

    ';'  shift, and go to state 44


state 13

    6 stmt: GETI . '(' variable ')' ';'

    '('  shift, and go to state 45


state 14

    8 stmt: GETS . '(' variable ')' ';'

    '('  shift, and go to state 46


state 15

    7 stmt: GETC . '(' variable ')' ';'

    '('  shift, and go to state 47


state 16

    9 stmt: PUTI . '(' arg ')' ';'

    '('  shift, and go to state 48


state 17

   11 stmt: PUTS . '(' arg ')' ';'

    '('  shift, and go to state 49


state 18

   10 stmt: PUTC . '(' arg ')' ';'

    '('  shift, and go to state 50


state 19

   12 stmt: PUTI_ . '(' arg ')' ';'

    '('  shift, and go to state 51


state 20

   14 stmt: PUTS_ . '(' arg ')' ';'

    '('  shift, and go to state 52


state 21

   13 stmt: PUTC_ . '(' arg ')' ';'

    '('  shift, and go to state 53


state 22

   44 expr: '-' . expr

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 55


state 23

    4 stmt: ';' .

    $default  reduce using rule 4 (stmt)


state 24

   58 expr: '(' . expr ')'

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 56


state 25

   24 stmt: '{' . stmt_list '}'

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 7
    FOR       shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    BREAK     shift, and go to state 11
    CONTINUE  shift, and go to state 12
    GETI      shift, and go to state 13
    GETS      shift, and go to state 14
    GETC      shift, and go to state 15
    PUTI      shift, and go to state 16
    PUTS      shift, and go to state 17
    PUTC      shift, and go to state 18
    PUTI_     shift, and go to state 19
    PUTS_     shift, and go to state 20
    PUTC_     shift, and go to state 21
    '-'       shift, and go to state 22
    ';'       shift, and go to state 23
    '('       shift, and go to state 24
    '{'       shift, and go to state 25

    stmt       go to state 57
    stmt_list  go to state 58
    variable   go to state 27
    array      go to state 28
    expr       go to state 29


state 26

    2 main: main stmt .

    $default  reduce using rule 2 (main)


state 27

   15 stmt: variable . '=' expr ';'
   42 expr: variable .

    '='  shift, and go to state 59

    $default  reduce using rule 42 (expr)


state 28

   16 stmt: array . '=' expr ';'
   43 expr: array .

    '='  shift, and go to state 60

    $default  reduce using rule 43 (expr)


state 29

    5 stmt: expr . ';'
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr

    OR   shift, and go to state 61
    AND  shift, and go to state 62
    '>'  shift, and go to state 63
    '<'  shift, and go to state 64
    NE   shift, and go to state 65
    EQ   shift, and go to state 66
    LE   shift, and go to state 67
    GE   shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73
    ';'  shift, and go to state 74


state 30

   37 variable: VARIABLE .
   38 array: VARIABLE . '[' expr ']'
   59 expr: VARIABLE . arg_list

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 75
    '['       shift, and go to state 32

    OR        reduce using rule 33 (arg)
    OR        [reduce using rule 37 (variable)]
    AND       reduce using rule 33 (arg)
    AND       [reduce using rule 37 (variable)]
    '>'       reduce using rule 33 (arg)
    '>'       [reduce using rule 37 (variable)]
    '<'       reduce using rule 33 (arg)
    '<'       [reduce using rule 37 (variable)]
    NE        reduce using rule 33 (arg)
    NE        [reduce using rule 37 (variable)]
    EQ        reduce using rule 33 (arg)
    EQ        [reduce using rule 37 (variable)]
    LE        reduce using rule 33 (arg)
    LE        [reduce using rule 37 (variable)]
    GE        reduce using rule 33 (arg)
    GE        [reduce using rule 37 (variable)]
    '+'       reduce using rule 33 (arg)
    '+'       [reduce using rule 37 (variable)]
    '-'       [reduce using rule 33 (arg)]
    '-'       [reduce using rule 37 (variable)]
    '*'       reduce using rule 33 (arg)
    '*'       [reduce using rule 37 (variable)]
    '/'       reduce using rule 33 (arg)
    '/'       [reduce using rule 37 (variable)]
    '%'       reduce using rule 33 (arg)
    '%'       [reduce using rule 37 (variable)]
    ';'       reduce using rule 33 (arg)
    ';'       [reduce using rule 37 (variable)]
    ')'       reduce using rule 33 (arg)
    ')'       [reduce using rule 37 (variable)]
    '{'       reduce using rule 37 (variable)
    ','       reduce using rule 33 (arg)
    ','       [reduce using rule 37 (variable)]
    ']'       reduce using rule 33 (arg)
    ']'       [reduce using rule 37 (variable)]
    $default  reduce using rule 33 (arg)

    arg       go to state 35
    arg_list  go to state 36
    variable  go to state 54
    array     go to state 38
    expr      go to state 39


state 31

   31 param_list: '(' . param_list ')'
   36 arg_list: '(' . arg_list ')'
   58 expr: '(' . expr ')'

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 31

    ')'       reduce using rule 28 (param)
    ')'       [reduce using rule 33 (arg)]
    ','       reduce using rule 28 (param)
    ','       [reduce using rule 33 (arg)]
    $default  reduce using rule 28 (param)

    param       go to state 33
    param_list  go to state 76
    arg         go to state 35
    arg_list    go to state 77
    variable    go to state 37
    array       go to state 38
    expr        go to state 78


state 32

   38 array: VARIABLE '[' . expr ']'

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 79


state 33

   29 param_list: param .

    $default  reduce using rule 29 (param_list)


state 34

   17 stmt: VARIABLE param_list . '{' stmt_list '}'
   30 param_list: param_list . ',' param

    '{'  shift, and go to state 80
    ','  shift, and go to state 81


state 35

   34 arg_list: arg .

    $default  reduce using rule 34 (arg_list)


state 36

   35 arg_list: arg_list . ',' arg
   59 expr: VARIABLE arg_list .

    ','  shift, and go to state 82

    ','       [reduce using rule 59 (expr)]
    $default  reduce using rule 59 (expr)


state 37

   27 param: variable .
   42 expr: variable .

    ')'       reduce using rule 27 (param)
    ')'       [reduce using rule 42 (expr)]
    '{'       reduce using rule 27 (param)
    ','       reduce using rule 27 (param)
    ','       [reduce using rule 42 (expr)]
    $default  reduce using rule 42 (expr)


state 38

   43 expr: array .

    $default  reduce using rule 43 (expr)


state 39

   32 arg: expr .
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr

    OR   shift, and go to state 61
    AND  shift, and go to state 62
    '>'  shift, and go to state 63
    '<'  shift, and go to state 64
    NE   shift, and go to state 65
    EQ   shift, and go to state 66
    LE   shift, and go to state 67
    GE   shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73

    OR        [reduce using rule 32 (arg)]
    AND       [reduce using rule 32 (arg)]
    '>'       [reduce using rule 32 (arg)]
    '<'       [reduce using rule 32 (arg)]
    NE        [reduce using rule 32 (arg)]
    EQ        [reduce using rule 32 (arg)]
    LE        [reduce using rule 32 (arg)]
    GE        [reduce using rule 32 (arg)]
    '+'       [reduce using rule 32 (arg)]
    '-'       [reduce using rule 32 (arg)]
    '*'       [reduce using rule 32 (arg)]
    '/'       [reduce using rule 32 (arg)]
    '%'       [reduce using rule 32 (arg)]
    $default  reduce using rule 32 (arg)


state 40

   18 stmt: FOR '(' . stmt stmt stmt ')' stmt

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 7
    FOR       shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    BREAK     shift, and go to state 11
    CONTINUE  shift, and go to state 12
    GETI      shift, and go to state 13
    GETS      shift, and go to state 14
    GETC      shift, and go to state 15
    PUTI      shift, and go to state 16
    PUTS      shift, and go to state 17
    PUTC      shift, and go to state 18
    PUTI_     shift, and go to state 19
    PUTS_     shift, and go to state 20
    PUTC_     shift, and go to state 21
    '-'       shift, and go to state 22
    ';'       shift, and go to state 23
    '('       shift, and go to state 24
    '{'       shift, and go to state 25

    stmt      go to state 83
    variable  go to state 27
    array     go to state 28
    expr      go to state 29


state 41

   19 stmt: WHILE '(' . expr ')' stmt

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 84


state 42

   20 stmt: IF '(' . expr ')' stmt
   21     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 85


state 43

   22 stmt: BREAK ';' .

    $default  reduce using rule 22 (stmt)


state 44

   23 stmt: CONTINUE ';' .

    $default  reduce using rule 23 (stmt)


state 45

    6 stmt: GETI '(' . variable ')' ';'

    VARIABLE  shift, and go to state 86

    variable  go to state 87


state 46

    8 stmt: GETS '(' . variable ')' ';'

    VARIABLE  shift, and go to state 86

    variable  go to state 88


state 47

    7 stmt: GETC '(' . variable ')' ';'

    VARIABLE  shift, and go to state 86

    variable  go to state 89


state 48

    9 stmt: PUTI '(' . arg ')' ';'

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    $default  reduce using rule 33 (arg)

    arg       go to state 90
    variable  go to state 54
    array     go to state 38
    expr      go to state 39


state 49

   11 stmt: PUTS '(' . arg ')' ';'

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    $default  reduce using rule 33 (arg)

    arg       go to state 91
    variable  go to state 54
    array     go to state 38
    expr      go to state 39


state 50

   10 stmt: PUTC '(' . arg ')' ';'

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    $default  reduce using rule 33 (arg)

    arg       go to state 92
    variable  go to state 54
    array     go to state 38
    expr      go to state 39


state 51

   12 stmt: PUTI_ '(' . arg ')' ';'

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    $default  reduce using rule 33 (arg)

    arg       go to state 93
    variable  go to state 54
    array     go to state 38
    expr      go to state 39


state 52

   14 stmt: PUTS_ '(' . arg ')' ';'

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    $default  reduce using rule 33 (arg)

    arg       go to state 94
    variable  go to state 54
    array     go to state 38
    expr      go to state 39


state 53

   13 stmt: PUTC_ '(' . arg ')' ';'

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    $default  reduce using rule 33 (arg)

    arg       go to state 95
    variable  go to state 54
    array     go to state 38
    expr      go to state 39


state 54

   42 expr: variable .

    $default  reduce using rule 42 (expr)


state 55

   44 expr: '-' expr .
   45     | expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr

    $default  reduce using rule 44 (expr)


state 56

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | '(' expr . ')'

    OR   shift, and go to state 61
    AND  shift, and go to state 62
    '>'  shift, and go to state 63
    '<'  shift, and go to state 64
    NE   shift, and go to state 65
    EQ   shift, and go to state 66
    LE   shift, and go to state 67
    GE   shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73
    ')'  shift, and go to state 96


state 57

   25 stmt_list: stmt .

    $default  reduce using rule 25 (stmt_list)


state 58

   24 stmt: '{' stmt_list . '}'
   26 stmt_list: stmt_list . stmt

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 7
    FOR       shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    BREAK     shift, and go to state 11
    CONTINUE  shift, and go to state 12
    GETI      shift, and go to state 13
    GETS      shift, and go to state 14
    GETC      shift, and go to state 15
    PUTI      shift, and go to state 16
    PUTS      shift, and go to state 17
    PUTC      shift, and go to state 18
    PUTI_     shift, and go to state 19
    PUTS_     shift, and go to state 20
    PUTC_     shift, and go to state 21
    '-'       shift, and go to state 22
    ';'       shift, and go to state 23
    '('       shift, and go to state 24
    '{'       shift, and go to state 25
    '}'       shift, and go to state 97

    stmt      go to state 98
    variable  go to state 27
    array     go to state 28
    expr      go to state 29


state 59

   15 stmt: variable '=' . expr ';'

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 99


state 60

   16 stmt: array '=' . expr ';'

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 100


state 61

   57 expr: expr OR . expr

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 101


state 62

   56 expr: expr AND . expr

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 102


state 63

   51 expr: expr '>' . expr

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 103


state 64

   50 expr: expr '<' . expr

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 104


state 65

   54 expr: expr NE . expr

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 105


state 66

   55 expr: expr EQ . expr

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 106


state 67

   53 expr: expr LE . expr

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 107


state 68

   52 expr: expr GE . expr

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 108


state 69

   45 expr: expr '+' . expr

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 109


state 70

   46 expr: expr '-' . expr

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 110


state 71

   47 expr: expr '*' . expr

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 111


state 72

   49 expr: expr '/' . expr

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 112


state 73

   48 expr: expr '%' . expr

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    variable  go to state 54
    array     go to state 38
    expr      go to state 113


state 74

    5 stmt: expr ';' .

    $default  reduce using rule 5 (stmt)


state 75

   36 arg_list: '(' . arg_list ')'
   58 expr: '(' . expr ')'

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 75

    $default  reduce using rule 33 (arg)

    arg       go to state 35
    arg_list  go to state 77
    variable  go to state 54
    array     go to state 38
    expr      go to state 78


state 76

   30 param_list: param_list . ',' param
   31           | '(' param_list . ')'

    ')'  shift, and go to state 114
    ','  shift, and go to state 81


state 77

   35 arg_list: arg_list . ',' arg
   36         | '(' arg_list . ')'

    ')'  shift, and go to state 115
    ','  shift, and go to state 82


state 78

   32 arg: expr .
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   58     | '(' expr . ')'

    OR   shift, and go to state 61
    AND  shift, and go to state 62
    '>'  shift, and go to state 63
    '<'  shift, and go to state 64
    NE   shift, and go to state 65
    EQ   shift, and go to state 66
    LE   shift, and go to state 67
    GE   shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73
    ')'  shift, and go to state 96

    ')'       [reduce using rule 32 (arg)]
    $default  reduce using rule 32 (arg)


state 79

   38 array: VARIABLE '[' expr . ']'
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr

    OR   shift, and go to state 61
    AND  shift, and go to state 62
    '>'  shift, and go to state 63
    '<'  shift, and go to state 64
    NE   shift, and go to state 65
    EQ   shift, and go to state 66
    LE   shift, and go to state 67
    GE   shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73
    ']'  shift, and go to state 116


state 80

   17 stmt: VARIABLE param_list '{' . stmt_list '}'

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 7
    FOR       shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    BREAK     shift, and go to state 11
    CONTINUE  shift, and go to state 12
    GETI      shift, and go to state 13
    GETS      shift, and go to state 14
    GETC      shift, and go to state 15
    PUTI      shift, and go to state 16
    PUTS      shift, and go to state 17
    PUTC      shift, and go to state 18
    PUTI_     shift, and go to state 19
    PUTS_     shift, and go to state 20
    PUTC_     shift, and go to state 21
    '-'       shift, and go to state 22
    ';'       shift, and go to state 23
    '('       shift, and go to state 24
    '{'       shift, and go to state 25

    stmt       go to state 57
    stmt_list  go to state 117
    variable   go to state 27
    array      go to state 28
    expr       go to state 29


state 81

   30 param_list: param_list ',' . param

    VARIABLE  shift, and go to state 86

    $default  reduce using rule 28 (param)

    param     go to state 118
    variable  go to state 119


state 82

   35 arg_list: arg_list ',' . arg

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 30
    '-'       shift, and go to state 22
    '('       shift, and go to state 24

    '-'       [reduce using rule 33 (arg)]
    $default  reduce using rule 33 (arg)

    arg       go to state 120
    variable  go to state 54
    array     go to state 38
    expr      go to state 39


state 83

   18 stmt: FOR '(' stmt . stmt stmt ')' stmt

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 7
    FOR       shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    BREAK     shift, and go to state 11
    CONTINUE  shift, and go to state 12
    GETI      shift, and go to state 13
    GETS      shift, and go to state 14
    GETC      shift, and go to state 15
    PUTI      shift, and go to state 16
    PUTS      shift, and go to state 17
    PUTC      shift, and go to state 18
    PUTI_     shift, and go to state 19
    PUTS_     shift, and go to state 20
    PUTC_     shift, and go to state 21
    '-'       shift, and go to state 22
    ';'       shift, and go to state 23
    '('       shift, and go to state 24
    '{'       shift, and go to state 25

    stmt      go to state 121
    variable  go to state 27
    array     go to state 28
    expr      go to state 29


state 84

   19 stmt: WHILE '(' expr . ')' stmt
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr

    OR   shift, and go to state 61
    AND  shift, and go to state 62
    '>'  shift, and go to state 63
    '<'  shift, and go to state 64
    NE   shift, and go to state 65
    EQ   shift, and go to state 66
    LE   shift, and go to state 67
    GE   shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73
    ')'  shift, and go to state 122


state 85

   20 stmt: IF '(' expr . ')' stmt
   21     | IF '(' expr . ')' stmt ELSE stmt
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr

    OR   shift, and go to state 61
    AND  shift, and go to state 62
    '>'  shift, and go to state 63
    '<'  shift, and go to state 64
    NE   shift, and go to state 65
    EQ   shift, and go to state 66
    LE   shift, and go to state 67
    GE   shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73
    ')'  shift, and go to state 123


state 86

   37 variable: VARIABLE .

    $default  reduce using rule 37 (variable)


state 87

    6 stmt: GETI '(' variable . ')' ';'

    ')'  shift, and go to state 124


state 88

    8 stmt: GETS '(' variable . ')' ';'

    ')'  shift, and go to state 125


state 89

    7 stmt: GETC '(' variable . ')' ';'

    ')'  shift, and go to state 126


state 90

    9 stmt: PUTI '(' arg . ')' ';'

    ')'  shift, and go to state 127


state 91

   11 stmt: PUTS '(' arg . ')' ';'

    ')'  shift, and go to state 128


state 92

   10 stmt: PUTC '(' arg . ')' ';'

    ')'  shift, and go to state 129


state 93

   12 stmt: PUTI_ '(' arg . ')' ';'

    ')'  shift, and go to state 130


state 94

   14 stmt: PUTS_ '(' arg . ')' ';'

    ')'  shift, and go to state 131


state 95

   13 stmt: PUTC_ '(' arg . ')' ';'

    ')'  shift, and go to state 132


state 96

   58 expr: '(' expr ')' .

    $default  reduce using rule 58 (expr)


state 97

   24 stmt: '{' stmt_list '}' .

    $default  reduce using rule 24 (stmt)


state 98

   26 stmt_list: stmt_list stmt .

    $default  reduce using rule 26 (stmt_list)


state 99

   15 stmt: variable '=' expr . ';'
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr

    OR   shift, and go to state 61
    AND  shift, and go to state 62
    '>'  shift, and go to state 63
    '<'  shift, and go to state 64
    NE   shift, and go to state 65
    EQ   shift, and go to state 66
    LE   shift, and go to state 67
    GE   shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73
    ';'  shift, and go to state 133


state 100

   16 stmt: array '=' expr . ';'
   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr

    OR   shift, and go to state 61
    AND  shift, and go to state 62
    '>'  shift, and go to state 63
    '<'  shift, and go to state 64
    NE   shift, and go to state 65
    EQ   shift, and go to state 66
    LE   shift, and go to state 67
    GE   shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73
    ';'  shift, and go to state 134


state 101

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   57     | expr OR expr .

    '>'  shift, and go to state 63
    '<'  shift, and go to state 64
    NE   shift, and go to state 65
    EQ   shift, and go to state 66
    LE   shift, and go to state 67
    GE   shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73

    $default  reduce using rule 57 (expr)


state 102

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   56     | expr AND expr .
   57     | expr . OR expr

    '>'  shift, and go to state 63
    '<'  shift, and go to state 64
    NE   shift, and go to state 65
    EQ   shift, and go to state 66
    LE   shift, and go to state 67
    GE   shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73

    $default  reduce using rule 56 (expr)


state 103

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   51     | expr '>' expr .
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73

    $default  reduce using rule 51 (expr)


state 104

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   50     | expr '<' expr .
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73

    $default  reduce using rule 50 (expr)


state 105

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   54     | expr NE expr .
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73

    $default  reduce using rule 54 (expr)


state 106

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   55     | expr EQ expr .
   56     | expr . AND expr
   57     | expr . OR expr

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73

    $default  reduce using rule 55 (expr)


state 107

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   53     | expr LE expr .
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73

    $default  reduce using rule 53 (expr)


state 108

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   52     | expr GE expr .
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73

    $default  reduce using rule 52 (expr)


state 109

   45 expr: expr . '+' expr
   45     | expr '+' expr .
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr

    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73

    $default  reduce using rule 45 (expr)


state 110

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   46     | expr '-' expr .
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr

    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73

    $default  reduce using rule 46 (expr)


state 111

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   47     | expr '*' expr .
   48     | expr . '%' expr
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr

    $default  reduce using rule 47 (expr)


state 112

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   49     | expr . '/' expr
   49     | expr '/' expr .
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr

    $default  reduce using rule 49 (expr)


state 113

   45 expr: expr . '+' expr
   46     | expr . '-' expr
   47     | expr . '*' expr
   48     | expr . '%' expr
   48     | expr '%' expr .
   49     | expr . '/' expr
   50     | expr . '<' expr
   51     | expr . '>' expr
   52     | expr . GE expr
   53     | expr . LE expr
   54     | expr . NE expr
   55     | expr . EQ expr
   56     | expr . AND expr
   57     | expr . OR expr

    $default  reduce using rule 48 (expr)


state 114

   31 param_list: '(' param_list ')' .

    $default  reduce using rule 31 (param_list)


state 115

   36 arg_list: '(' arg_list ')' .

    $default  reduce using rule 36 (arg_list)


state 116

   38 array: VARIABLE '[' expr ']' .

    $default  reduce using rule 38 (array)


state 117

   17 stmt: VARIABLE param_list '{' stmt_list . '}'
   26 stmt_list: stmt_list . stmt

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 7
    FOR       shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    BREAK     shift, and go to state 11
    CONTINUE  shift, and go to state 12
    GETI      shift, and go to state 13
    GETS      shift, and go to state 14
    GETC      shift, and go to state 15
    PUTI      shift, and go to state 16
    PUTS      shift, and go to state 17
    PUTC      shift, and go to state 18
    PUTI_     shift, and go to state 19
    PUTS_     shift, and go to state 20
    PUTC_     shift, and go to state 21
    '-'       shift, and go to state 22
    ';'       shift, and go to state 23
    '('       shift, and go to state 24
    '{'       shift, and go to state 25
    '}'       shift, and go to state 135

    stmt      go to state 98
    variable  go to state 27
    array     go to state 28
    expr      go to state 29


state 118

   30 param_list: param_list ',' param .

    $default  reduce using rule 30 (param_list)


state 119

   27 param: variable .

    $default  reduce using rule 27 (param)


state 120

   35 arg_list: arg_list ',' arg .

    $default  reduce using rule 35 (arg_list)


state 121

   18 stmt: FOR '(' stmt stmt . stmt ')' stmt

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 7
    FOR       shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    BREAK     shift, and go to state 11
    CONTINUE  shift, and go to state 12
    GETI      shift, and go to state 13
    GETS      shift, and go to state 14
    GETC      shift, and go to state 15
    PUTI      shift, and go to state 16
    PUTS      shift, and go to state 17
    PUTC      shift, and go to state 18
    PUTI_     shift, and go to state 19
    PUTS_     shift, and go to state 20
    PUTC_     shift, and go to state 21
    '-'       shift, and go to state 22
    ';'       shift, and go to state 23
    '('       shift, and go to state 24
    '{'       shift, and go to state 25

    stmt      go to state 136
    variable  go to state 27
    array     go to state 28
    expr      go to state 29


state 122

   19 stmt: WHILE '(' expr ')' . stmt

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 7
    FOR       shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    BREAK     shift, and go to state 11
    CONTINUE  shift, and go to state 12
    GETI      shift, and go to state 13
    GETS      shift, and go to state 14
    GETC      shift, and go to state 15
    PUTI      shift, and go to state 16
    PUTS      shift, and go to state 17
    PUTC      shift, and go to state 18
    PUTI_     shift, and go to state 19
    PUTS_     shift, and go to state 20
    PUTC_     shift, and go to state 21
    '-'       shift, and go to state 22
    ';'       shift, and go to state 23
    '('       shift, and go to state 24
    '{'       shift, and go to state 25

    stmt      go to state 137
    variable  go to state 27
    array     go to state 28
    expr      go to state 29


state 123

   20 stmt: IF '(' expr ')' . stmt
   21     | IF '(' expr ')' . stmt ELSE stmt

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 7
    FOR       shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    BREAK     shift, and go to state 11
    CONTINUE  shift, and go to state 12
    GETI      shift, and go to state 13
    GETS      shift, and go to state 14
    GETC      shift, and go to state 15
    PUTI      shift, and go to state 16
    PUTS      shift, and go to state 17
    PUTC      shift, and go to state 18
    PUTI_     shift, and go to state 19
    PUTS_     shift, and go to state 20
    PUTC_     shift, and go to state 21
    '-'       shift, and go to state 22
    ';'       shift, and go to state 23
    '('       shift, and go to state 24
    '{'       shift, and go to state 25

    stmt      go to state 138
    variable  go to state 27
    array     go to state 28
    expr      go to state 29


state 124

    6 stmt: GETI '(' variable ')' . ';'

    ';'  shift, and go to state 139


state 125

    8 stmt: GETS '(' variable ')' . ';'

    ';'  shift, and go to state 140


state 126

    7 stmt: GETC '(' variable ')' . ';'

    ';'  shift, and go to state 141


state 127

    9 stmt: PUTI '(' arg ')' . ';'

    ';'  shift, and go to state 142


state 128

   11 stmt: PUTS '(' arg ')' . ';'

    ';'  shift, and go to state 143


state 129

   10 stmt: PUTC '(' arg ')' . ';'

    ';'  shift, and go to state 144


state 130

   12 stmt: PUTI_ '(' arg ')' . ';'

    ';'  shift, and go to state 145


state 131

   14 stmt: PUTS_ '(' arg ')' . ';'

    ';'  shift, and go to state 146


state 132

   13 stmt: PUTC_ '(' arg ')' . ';'

    ';'  shift, and go to state 147


state 133

   15 stmt: variable '=' expr ';' .

    $default  reduce using rule 15 (stmt)


state 134

   16 stmt: array '=' expr ';' .

    $default  reduce using rule 16 (stmt)


state 135

   17 stmt: VARIABLE param_list '{' stmt_list '}' .

    $default  reduce using rule 17 (stmt)


state 136

   18 stmt: FOR '(' stmt stmt stmt . ')' stmt

    ')'  shift, and go to state 148


state 137

   19 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 19 (stmt)


state 138

   20 stmt: IF '(' expr ')' stmt .
   21     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 149

    $default  reduce using rule 20 (stmt)


state 139

    6 stmt: GETI '(' variable ')' ';' .

    $default  reduce using rule 6 (stmt)


state 140

    8 stmt: GETS '(' variable ')' ';' .

    $default  reduce using rule 8 (stmt)


state 141

    7 stmt: GETC '(' variable ')' ';' .

    $default  reduce using rule 7 (stmt)


state 142

    9 stmt: PUTI '(' arg ')' ';' .

    $default  reduce using rule 9 (stmt)


state 143

   11 stmt: PUTS '(' arg ')' ';' .

    $default  reduce using rule 11 (stmt)


state 144

   10 stmt: PUTC '(' arg ')' ';' .

    $default  reduce using rule 10 (stmt)


state 145

   12 stmt: PUTI_ '(' arg ')' ';' .

    $default  reduce using rule 12 (stmt)


state 146

   14 stmt: PUTS_ '(' arg ')' ';' .

    $default  reduce using rule 14 (stmt)


state 147

   13 stmt: PUTC_ '(' arg ')' ';' .

    $default  reduce using rule 13 (stmt)


state 148

   18 stmt: FOR '(' stmt stmt stmt ')' . stmt

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 7
    FOR       shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    BREAK     shift, and go to state 11
    CONTINUE  shift, and go to state 12
    GETI      shift, and go to state 13
    GETS      shift, and go to state 14
    GETC      shift, and go to state 15
    PUTI      shift, and go to state 16
    PUTS      shift, and go to state 17
    PUTC      shift, and go to state 18
    PUTI_     shift, and go to state 19
    PUTS_     shift, and go to state 20
    PUTC_     shift, and go to state 21
    '-'       shift, and go to state 22
    ';'       shift, and go to state 23
    '('       shift, and go to state 24
    '{'       shift, and go to state 25

    stmt      go to state 150
    variable  go to state 27
    array     go to state 28
    expr      go to state 29


state 149

   21 stmt: IF '(' expr ')' stmt ELSE . stmt

    INTEGER   shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 6
    VARIABLE  shift, and go to state 7
    FOR       shift, and go to state 8
    WHILE     shift, and go to state 9
    IF        shift, and go to state 10
    BREAK     shift, and go to state 11
    CONTINUE  shift, and go to state 12
    GETI      shift, and go to state 13
    GETS      shift, and go to state 14
    GETC      shift, and go to state 15
    PUTI      shift, and go to state 16
    PUTS      shift, and go to state 17
    PUTC      shift, and go to state 18
    PUTI_     shift, and go to state 19
    PUTS_     shift, and go to state 20
    PUTC_     shift, and go to state 21
    '-'       shift, and go to state 22
    ';'       shift, and go to state 23
    '('       shift, and go to state 24
    '{'       shift, and go to state 25

    stmt      go to state 151
    variable  go to state 27
    array     go to state 28
    expr      go to state 29


state 150

   18 stmt: FOR '(' stmt stmt stmt ')' stmt .

    $default  reduce using rule 18 (stmt)


state 151

   21 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 21 (stmt)
